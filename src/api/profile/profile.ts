/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * Login Service API
 * Ecosystem Hallucination Guys API Document
 * OpenAPI spec version: 1.0
 */
import useSwr from 'swr'
import type { Key, SWRConfiguration } from 'swr'
import type { CommonAppError, CommonSuccessRes } from '../model'
import { requester } from '../mutator/requester'

/**
 * Get user info
 * @summary Profile user
 */
export const getProfile = () => {
  return requester<CommonSuccessRes>({ url: `/profile`, method: 'GET' })
}

export const getGetProfileKey = () => [`/profile`] as const

export type GetProfileQueryResult = NonNullable<
  Awaited<ReturnType<typeof getProfile>>
>
export type GetProfileQueryError = CommonAppError

/**
 * @summary Profile user
 */
export const useGetProfile = <TError = CommonAppError>(options?: {
  swr?: SWRConfiguration<Awaited<ReturnType<typeof getProfile>>, TError> & {
    swrKey?: Key
    enabled?: boolean
  }
}) => {
  const { swr: swrOptions } = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
  const swrKey =
    swrOptions?.swrKey ?? (() => (isEnabled ? getGetProfileKey() : null))
  const swrFn = () => getProfile()

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(
    swrKey,
    swrFn,
    {
      ...swrOptions,
    },
  )

  return {
    swrKey,
    ...query,
  }
}
